# Generated from sexp.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,9,110,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,1,0,1,0,1,0,1,0,5,0,28,8,
        0,10,0,12,0,31,9,0,1,0,1,0,1,1,4,1,36,8,1,11,1,12,1,37,1,1,1,1,1,
        2,3,2,43,8,2,1,2,4,2,46,8,2,11,2,12,2,47,1,2,1,2,4,2,52,8,2,11,2,
        12,2,53,3,2,56,8,2,1,3,1,3,1,3,5,3,61,8,3,10,3,12,3,64,9,3,1,4,1,
        4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,5,8,76,8,8,10,8,12,8,79,9,8,1,
        8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,107,8,9,1,10,1,10,0,0,
        11,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,0,21,0,1,0,9,2,0,34,
        34,92,92,3,0,9,10,13,13,32,32,2,0,43,43,45,45,2,0,10,10,13,13,2,
        0,65,90,97,122,2,0,45,45,61,61,2,0,47,47,60,60,4,0,35,35,38,38,46,
        46,64,64,3,0,33,33,36,36,58,58,132,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,
        0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
        0,0,0,17,1,0,0,0,1,23,1,0,0,0,3,35,1,0,0,0,5,42,1,0,0,0,7,57,1,0,
        0,0,9,65,1,0,0,0,11,67,1,0,0,0,13,69,1,0,0,0,15,71,1,0,0,0,17,73,
        1,0,0,0,19,106,1,0,0,0,21,108,1,0,0,0,23,29,5,34,0,0,24,25,5,92,
        0,0,25,28,9,0,0,0,26,28,8,0,0,0,27,24,1,0,0,0,27,26,1,0,0,0,28,31,
        1,0,0,0,29,27,1,0,0,0,29,30,1,0,0,0,30,32,1,0,0,0,31,29,1,0,0,0,
        32,33,5,34,0,0,33,2,1,0,0,0,34,36,7,1,0,0,35,34,1,0,0,0,36,37,1,
        0,0,0,37,35,1,0,0,0,37,38,1,0,0,0,38,39,1,0,0,0,39,40,6,1,0,0,40,
        4,1,0,0,0,41,43,7,2,0,0,42,41,1,0,0,0,42,43,1,0,0,0,43,45,1,0,0,
        0,44,46,3,21,10,0,45,44,1,0,0,0,46,47,1,0,0,0,47,45,1,0,0,0,47,48,
        1,0,0,0,48,55,1,0,0,0,49,51,5,46,0,0,50,52,3,21,10,0,51,50,1,0,0,
        0,52,53,1,0,0,0,53,51,1,0,0,0,53,54,1,0,0,0,54,56,1,0,0,0,55,49,
        1,0,0,0,55,56,1,0,0,0,56,6,1,0,0,0,57,62,3,19,9,0,58,61,3,19,9,0,
        59,61,3,21,10,0,60,58,1,0,0,0,60,59,1,0,0,0,61,64,1,0,0,0,62,60,
        1,0,0,0,62,63,1,0,0,0,63,8,1,0,0,0,64,62,1,0,0,0,65,66,5,91,0,0,
        66,10,1,0,0,0,67,68,5,93,0,0,68,12,1,0,0,0,69,70,5,40,0,0,70,14,
        1,0,0,0,71,72,5,41,0,0,72,16,1,0,0,0,73,77,5,59,0,0,74,76,8,3,0,
        0,75,74,1,0,0,0,76,79,1,0,0,0,77,75,1,0,0,0,77,78,1,0,0,0,78,80,
        1,0,0,0,79,77,1,0,0,0,80,81,6,8,1,0,81,18,1,0,0,0,82,107,7,4,0,0,
        83,84,5,61,0,0,84,107,5,61,0,0,85,86,5,43,0,0,86,107,5,61,0,0,87,
        107,5,43,0,0,88,89,5,45,0,0,89,107,5,61,0,0,90,107,7,5,0,0,91,92,
        5,42,0,0,92,107,5,61,0,0,93,107,5,42,0,0,94,95,5,47,0,0,95,107,5,
        61,0,0,96,107,7,6,0,0,97,98,5,60,0,0,98,107,5,61,0,0,99,107,5,62,
        0,0,100,101,5,62,0,0,101,107,5,61,0,0,102,107,7,7,0,0,103,104,5,
        38,0,0,104,107,5,61,0,0,105,107,7,8,0,0,106,82,1,0,0,0,106,83,1,
        0,0,0,106,85,1,0,0,0,106,87,1,0,0,0,106,88,1,0,0,0,106,90,1,0,0,
        0,106,91,1,0,0,0,106,93,1,0,0,0,106,94,1,0,0,0,106,96,1,0,0,0,106,
        97,1,0,0,0,106,99,1,0,0,0,106,100,1,0,0,0,106,102,1,0,0,0,106,103,
        1,0,0,0,106,105,1,0,0,0,107,20,1,0,0,0,108,109,2,48,57,0,109,22,
        1,0,0,0,12,0,27,29,37,42,47,53,55,60,62,77,106,2,6,0,0,0,1,0
    ]

class sexpLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    STRING = 1
    WHITESPACE = 2
    NUMBER = 3
    SYMBOL = 4
    LBRACKET = 5
    RBRACKET = 6
    LPAREN = 7
    RPAREN = 8
    LINE_COMMENT = 9

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'['", "']'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "WHITESPACE", "NUMBER", "SYMBOL", "LBRACKET", "RBRACKET", 
            "LPAREN", "RPAREN", "LINE_COMMENT" ]

    ruleNames = [ "STRING", "WHITESPACE", "NUMBER", "SYMBOL", "LBRACKET", 
                  "RBRACKET", "LPAREN", "RPAREN", "LINE_COMMENT", "SYMBOL_START", 
                  "DIGIT" ]

    grammarFileName = "sexp.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


